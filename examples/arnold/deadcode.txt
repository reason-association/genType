  XXX sourceFile does not exist: misc.re
  XXX sourceFile does not exist: parse.re
  XXX sourceFile does not exist: parse.rei
  XXX sourceFile does not exist: arg_helper.rei
  XXX sourceFile does not exist: clflags.rei
  XXX sourceFile does not exist: asttypes.rei
  XXX sourceFile does not exist: ast_helper.rei
  XXX sourceFile does not exist: warnings.re
  XXX sourceFile does not exist: syntaxerr.re
  XXX sourceFile does not exist: numbers.rei
  XXX sourceFile does not exist: lexer.re
  XXX sourceFile does not exist: location.re
  XXX sourceFile does not exist: profile.re
  XXX sourceFile does not exist: longident.rei
  XXX sourceFile does not exist: parsetree.rei
  XXX sourceFile does not exist: lexer.rei
  XXX sourceFile does not exist: pprintast.re
  XXX sourceFile does not exist: arg_helper.re
  XXX sourceFile does not exist: lexing.rei
  XXX sourceFile does not exist: asttypes.re
  XXX sourceFile does not exist: location.rei
  XXX sourceFile does not exist: parsing.re
  XXX sourceFile does not exist: terminfo.rei
  XXX sourceFile does not exist: misc.rei
  XXX sourceFile does not exist: longident.re
  XXX sourceFile does not exist: numbers.re
  XXX sourceFile does not exist: config.re
  XXX sourceFile does not exist: printast.rei
  XXX sourceFile does not exist: identifiable.re
  XXX sourceFile does not exist: clflags.re
  XXX sourceFile does not exist: parsing.rei
  XXX sourceFile does not exist: parsetree.re
  XXX sourceFile does not exist: identifiable.rei
  XXX sourceFile does not exist: printast.re
  XXX sourceFile does not exist: docstrings.rei
  XXX sourceFile does not exist: ast_helper.re
  XXX sourceFile does not exist: warnings.rei
  XXX sourceFile does not exist: profile.rei
  XXX sourceFile does not exist: parser.re
  XXX sourceFile does not exist: syntaxerr.rei
  XXX sourceFile does not exist: terminfo.re
  XXX sourceFile does not exist: parser.rei
  XXX sourceFile does not exist: docstrings.re
  XXX sourceFile does not exist: lexing.re
  XXX sourceFile does not exist: pprintast.rei
  Scanning /Users/cristianoc/reasonml/genType/examples/arnold/lib/bs/src/TestCyberTruck.cmt
  addValueReference TestCyberTruck.re:3:6 --> random.mli:40:0
  addValueReference TestCyberTruck.re:3:6 --> pervasives.mli:1179:0
  addValueReference TestCyberTruck.re:2:4 --> TestCyberTruck.re:3:6
  addValueReference TestCyberTruck.re:2:4 --> TestCyberTruck.re:3:6
  addValueReference TestCyberTruck.re:2:4 --> pervasives.mli:1182:0
  addValueReference TestCyberTruck.re:2:4 --> pervasives.mli:268:0
  addValueReference TestCyberTruck.re:2:4 --> pervasives.mli:1187:0
  addValueReference TestCyberTruck.re:2:4 --> TestCyberTruck.re:3:6
  addValueReference TestCyberTruck.re:2:4 --> pervasives.mli:1182:0
  addValueReference TestCyberTruck.re:2:4 --> pervasives.mli:64:0
  addValueReference TestCyberTruck.re:13:4 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:18:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:27:8 --> TestCyberTruck.re:27:8
  addValueReference TestCyberTruck.re:30:8 --> TestCyberTruck.re:30:8
  addValueReference TestCyberTruck.re:30:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:37:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:37:8 --> TestCyberTruck.re:37:8
  addValueReference TestCyberTruck.re:45:6 --> TestCyberTruck.re:43:8
  addValueReference TestCyberTruck.re:43:8 --> TestCyberTruck.re:45:6
  addValueReference TestCyberTruck.re:51:8 --> TestCyberTruck.re:51:33
  addValueReference TestCyberTruck.re:51:8 --> TestCyberTruck.re:51:8
  addValueReference TestCyberTruck.re:51:8 --> TestCyberTruck.re:13:4
  addValueReference TestCyberTruck.re:51:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:51:8 --> TestCyberTruck.re:51:33
  addValueReference TestCyberTruck.re:51:8 --> pervasives.mli:68:0
  addValueReference TestCyberTruck.re:62:8 --> TestCyberTruck.re:62:30
  addValueReference TestCyberTruck.re:62:8 --> TestCyberTruck.re:62:8
  addValueReference TestCyberTruck.re:62:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:62:8 --> TestCyberTruck.re:62:30
  addValueReference TestCyberTruck.re:62:8 --> pervasives.mli:68:0
  addValueReference TestCyberTruck.re:71:8 --> TestCyberTruck.re:71:33
  addValueReference TestCyberTruck.re:71:8 --> TestCyberTruck.re:77:4
  addValueReference TestCyberTruck.re:71:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:71:8 --> TestCyberTruck.re:71:33
  addValueReference TestCyberTruck.re:71:8 --> pervasives.mli:68:0
  addValueReference TestCyberTruck.re:77:4 --> TestCyberTruck.re:77:30
  addValueReference TestCyberTruck.re:77:4 --> TestCyberTruck.re:71:8
  addValueReference TestCyberTruck.re:77:4 --> TestCyberTruck.re:80:4
  addValueReference TestCyberTruck.re:80:4 --> TestCyberTruck.re:80:25
  addValueReference TestCyberTruck.re:80:4 --> TestCyberTruck.re:80:29
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:83:23
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:83:8
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:18:8
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:83:23
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:91:4
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:83:23
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:91:4
  addValueReference TestCyberTruck.re:83:8 --> TestCyberTruck.re:83:23
  addValueReference TestCyberTruck.re:83:8 --> pervasives.mli:68:0
  addValueReference TestCyberTruck.re:95:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:95:8 --> TestCyberTruck.re:95:36
  addValueReference TestCyberTruck.re:95:8 --> TestCyberTruck.re:95:8
  addValueReference TestCyberTruck.re:95:8 --> TestCyberTruck.re:96:6
  addValueReference TestCyberTruck.re:102:8 --> TestCyberTruck.re:102:36
  addValueReference TestCyberTruck.re:102:8 --> TestCyberTruck.re:102:8
  addValueReference TestCyberTruck.re:102:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:102:8 --> TestCyberTruck.re:103:6
  addValueReference TestCyberTruck.re:109:8 --> TestCyberTruck.re:109:44
  addValueReference TestCyberTruck.re:109:8 --> TestCyberTruck.re:109:8
  addValueReference TestCyberTruck.re:109:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:109:8 --> TestCyberTruck.re:110:6
  addValueReference TestCyberTruck.re:117:8 --> TestCyberTruck.re:117:45
  addValueReference TestCyberTruck.re:117:8 --> TestCyberTruck.re:117:8
  addValueReference TestCyberTruck.re:117:8 --> TestCyberTruck.re:2:4
  addValueReference TestCyberTruck.re:117:8 --> TestCyberTruck.re:118:6
  addValueReference TestCyberTruck.re:140:6 --> TestCyberTruck.re:144:10
  addValueReference TestCyberTruck.re:140:6 --> pervasives.mli:723:0
  addValueReference TestCyberTruck.re:140:6 --> TestCyberTruck.re:140:22
  addValueReference TestCyberTruck.re:147:6 --> random.mli:40:0
  addValueReference TestCyberTruck.re:147:6 --> random.mli:40:0
  addValueReference TestCyberTruck.re:147:6 --> TestCyberTruck.re:147:13
  [type] addTypeReference TestCyberTruck.re:148:30 --> TestCyberTruck.re:127:6
  [type] addTypeReference TestCyberTruck.re:148:36 --> TestCyberTruck.re:126:6
  addValueReference TestCyberTruck.re:147:6 --> random.mli:40:0
  addValueReference TestCyberTruck.re:147:6 --> random.mli:63:0
  addValueReference TestCyberTruck.re:147:6 --> TestCyberTruck.re:147:13
  addValueReference TestCyberTruck.re:152:6 --> TestCyberTruck.re:152:16
  [type] addTypeReference TestCyberTruck.re:152:40 --> TestCyberTruck.re:136:4
  addValueReference TestCyberTruck.re:152:6 --> TestCyberTruck.re:152:13
  addValueReference TestCyberTruck.re:152:6 --> TestCyberTruck.re:152:13
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:154:16
  [type] addTypeReference TestCyberTruck.re:158:48 --> TestCyberTruck.re:137:4
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:154:16
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:140:6
  addValueReference TestCyberTruck.re:154:6 --> pervasives.mli:670:0
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:152:6
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:154:16
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:147:6
  [type] addTypeReference TestCyberTruck.re:155:8 --> TestCyberTruck.re:137:4
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:154:16
  addValueReference TestCyberTruck.re:154:6 --> TestCyberTruck.re:154:19
  addValueReference TestCyberTruck.re:154:6 --> pervasives.mli:51:0
  addValueReference TestCyberTruck.re:163:8 --> TestCyberTruck.re:163:27
  addValueReference TestCyberTruck.re:163:8 --> TestCyberTruck.re:165:4
  addValueReference TestCyberTruck.re:163:8 --> TestCyberTruck.re:167:4
  addValueReference TestCyberTruck.re:165:4 --> TestCyberTruck.re:165:19
  addValueReference TestCyberTruck.re:165:4 --> TestCyberTruck.re:176:4
  addValueReference TestCyberTruck.re:165:4 --> TestCyberTruck.re:167:4
  addValueReference TestCyberTruck.re:172:10 --> TestCyberTruck.re:168:3
  addValueReference TestCyberTruck.re:172:10 --> TestCyberTruck.re:168:17
  addValueReference TestCyberTruck.re:173:10 --> TestCyberTruck.re:168:3
  addValueReference TestCyberTruck.re:173:10 --> TestCyberTruck.re:168:17
  addValueReference TestCyberTruck.re:173:10 --> TestCyberTruck.re:167:4
  addValueReference TestCyberTruck.re:167:4 --> TestCyberTruck.re:172:10
  addValueReference TestCyberTruck.re:167:4 --> TestCyberTruck.re:173:10
  [type] addTypeReference TestCyberTruck.re:169:8 --> TestCyberTruck.re:137:4
  addValueReference TestCyberTruck.re:167:4 --> TestCyberTruck.re:168:3
  [type] addTypeReference TestCyberTruck.re:169:19 --> TestCyberTruck.re:125:6
  addValueReference TestCyberTruck.re:167:4 --> pervasives.mli:51:0
  addValueReference TestCyberTruck.re:177:6 --> TestCyberTruck.re:179:10
  addValueReference TestCyberTruck.re:177:6 --> TestCyberTruck.re:176:16
  addValueReference TestCyberTruck.re:177:6 --> TestCyberTruck.re:152:6
  [type] addTypeReference TestCyberTruck.re:178:11 --> TestCyberTruck.re:137:4
  addValueReference TestCyberTruck.re:177:6 --> TestCyberTruck.re:176:16
  addValueReference TestCyberTruck.re:176:4 --> TestCyberTruck.re:177:6
  addValueReference TestCyberTruck.re:176:4 --> TestCyberTruck.re:176:16
  addValueReference TestCyberTruck.re:176:4 --> TestCyberTruck.re:147:6
  export progress TestCyberTruck.re:2:4
  export progress2 TestCyberTruck.re:13:4
  export f TestCyberTruck.re:18:8
  export justReturn TestCyberTruck.re:24:8
  export alwaysLoop TestCyberTruck.re:27:8
  export alwaysProgress TestCyberTruck.re:30:8
  export alwaysProgressWrongOrder TestCyberTruck.re:37:8
  export doNotAlias TestCyberTruck.re:43:8
  export progressOnBothBranches TestCyberTruck.re:51:8
  export progressOnOneBranch TestCyberTruck.re:62:8
  export testParametricFunction TestCyberTruck.re:71:8
  export testParametricFunction2 TestCyberTruck.re:77:4
  export callParseFunction TestCyberTruck.re:80:4
  export testCacheHit TestCyberTruck.re:83:8
  export doNothing TestCyberTruck.re:91:4
  export evalOrderIsNotLeftToRight TestCyberTruck.re:95:8
  export evalOrderIsNotRightToLeft TestCyberTruck.re:102:8
  export butFirstArgumentIsAlwaysEvaluated TestCyberTruck.re:109:8
  export butSecondArgumentIsAlwaysEvaluated TestCyberTruck.re:117:8
  [type] export Asterisk TestCyberTruck.re:125:6
  [type] export Int TestCyberTruck.re:126:6
  [type] export Eof TestCyberTruck.re:127:6
  [type] export lnum TestCyberTruck.re:130:4
  [type] export cnum TestCyberTruck.re:131:4
  [type] export position TestCyberTruck.re:135:4
  [type] export errors TestCyberTruck.re:136:4
  [type] export token TestCyberTruck.re:137:4
  export tokenToString TestCyberTruck.re:140:6
  export next TestCyberTruck.re:147:6
  export err TestCyberTruck.re:152:6
  export expect TestCyberTruck.re:154:6
  export parseListListInt TestCyberTruck.re:163:8
  export parseListInt TestCyberTruck.re:165:4
  export parseList TestCyberTruck.re:167:4
  export parseInt TestCyberTruck.re:176:4
  
  Function Table:
    justReturn: _
  
  Function Table:
    alwaysLoop: alwaysLoop
  TestCyberTruck.re:27:27 termination error: possilbe infinite loop when calling "alwaysLoop"
    CallStack:
    1 at alwaysLoop (TestCyberTruck.re:27:21)
  
  Function Table:
    alwaysProgress: +progress; alwaysProgress
  
  Function Table:
    alwaysProgressWrongOrder: alwaysProgressWrongOrder; +progress
  TestCyberTruck.re:38:2 termination error: possilbe infinite loop when calling "alwaysProgressWrongOrder"
    CallStack:
    1 at alwaysProgressWrongOrder (TestCyberTruck.re:37:35)
  TestCyberTruck.re:45:14 termination error: "doNotAlias" can only be called directly, or passed as labeled argument.
  
  Function Table:
    doNotAlias: _
  
  Function Table:
    progressOnBothBranches: ( +progress | +progress2 ); progressOnBothBranches
  
  Function Table:
    progressOnOneBranch: ( +progress | _ ); progressOnOneBranch
  TestCyberTruck.re:66:2 termination error: possilbe infinite loop when calling "progressOnOneBranch"
    CallStack:
    1 at progressOnOneBranch (TestCyberTruck.re:62:30)
  TestCyberTruck.re:78:38 termination analysis: "callParseFunction" is parametric ~parseFunction=testParametricFunction
  
  Function Table:
    callParseFunction<parseFunction>: parseFunction
    testParametricFunction: ( +progress | _ ); testParametricFunction2
    testParametricFunction2: callParseFunction<parseFunction:testParametricFunction>
  TestCyberTruck.re:80:47 termination error: possilbe infinite loop when calling "parseFunction" which is "testParametricFunction"
    CallStack:
    3 at callParseFunction<parseFunction:testParametricFunction> (TestCyberTruck.re:77:35)
    2 at testParametricFunction2 (TestCyberTruck.re:75:2)
    1 at testParametricFunction (TestCyberTruck.re:71:33)
  
  Function Table:
    doNothing: _
    testCacheHit: ( doNothing; doNothing; +Progress.Nested.f | _ ); testCacheHit
  TestCyberTruck.re:86:4 termination analysis: cache hit for doNothing
  TestCyberTruck.re:89:2 termination error: possilbe infinite loop when calling "testCacheHit"
    CallStack:
    1 at testCacheHit (TestCyberTruck.re:83:23)
  
  Function Table:
    evalOrderIsNotLeftToRight: {+progress, evalOrderIsNotLeftToRight, _}
  TestCyberTruck.re:97:30 termination error: possilbe infinite loop when calling "evalOrderIsNotLeftToRight"
    CallStack:
    1 at evalOrderIsNotLeftToRight (TestCyberTruck.re:95:36)
  
  Function Table:
    evalOrderIsNotRightToLeft: {evalOrderIsNotRightToLeft, +progress, _}
  TestCyberTruck.re:104:18 termination error: possilbe infinite loop when calling "evalOrderIsNotRightToLeft"
    CallStack:
    1 at evalOrderIsNotRightToLeft (TestCyberTruck.re:102:36)
  
  Function Table:
    butFirstArgumentIsAlwaysEvaluated: +progress; butFirstArgumentIsAlwaysEvaluated
  
  Function Table:
    butSecondArgumentIsAlwaysEvaluated: +progress; butSecondArgumentIsAlwaysEvaluated
  TestCyberTruck.re:163:48 termination analysis: "parseList" is parametric ~f=parseListInt
  TestCyberTruck.re:165:40 termination analysis: "parseList" is parametric ~f=parseInt
  
  Function Table:
    parseInt: +Parser.next
    parseList<f>: ( _ | f; parseList<f:f> )
    parseListInt: parseList<f:parseInt>
    parseListListInt: parseList<f:parseListInt>
  TestCyberTruck.re:173:14 termination error: possilbe infinite loop when calling "parseList<f:f>" which is "parseList<f:parseListInt>"
    CallStack:
    2 at parseList<f:parseListInt> (TestCyberTruck.re:163:32)
    1 at parseListListInt (TestCyberTruck.re:163:27)

UNUSED EXPORTED VALUES:
  
File References

  TestCyberTruck.re -->> pervasives.mli, random.mli
  TestCyberTruck.parseInt: 1 references (TestCyberTruck.re:165:4)
  TestCyberTruck.parseList: 3 references (TestCyberTruck.re:163:8, TestCyberTruck.re:165:4, TestCyberTruck.re:173:10)
  TestCyberTruck.parseListInt: 1 references (TestCyberTruck.re:163:8)
  TestCyberTruck.Parser.err: 2 references (TestCyberTruck.re:154:6, TestCyberTruck.re:177:6)
  TestCyberTruck.Parser.next: 2 references (TestCyberTruck.re:154:6, TestCyberTruck.re:176:4)
  TestCyberTruck.butSecondArgumentIsAlwaysEvaluated: 1 references (TestCyberTruck.re:117:8)
  TestCyberTruck.butFirstArgumentIsAlwaysEvaluated: 1 references (TestCyberTruck.re:109:8)
  TestCyberTruck.evalOrderIsNotRightToLeft: 1 references (TestCyberTruck.re:102:8)
  TestCyberTruck.evalOrderIsNotLeftToRight: 1 references (TestCyberTruck.re:95:8)
  TestCyberTruck.doNothing: 1 references (TestCyberTruck.re:83:8)
  TestCyberTruck.testCacheHit: 1 references (TestCyberTruck.re:83:8)
  TestCyberTruck.callParseFunction: 1 references (TestCyberTruck.re:77:4)
  TestCyberTruck.testParametricFunction2: 1 references (TestCyberTruck.re:71:8)
  TestCyberTruck.testParametricFunction: 1 references (TestCyberTruck.re:77:4)
  TestCyberTruck.progressOnOneBranch: 1 references (TestCyberTruck.re:62:8)
  TestCyberTruck.progressOnBothBranches: 1 references (TestCyberTruck.re:51:8)
  TestCyberTruck.doNotAlias: 1 references (TestCyberTruck.re:45:6)
  TestCyberTruck.alwaysProgressWrongOrder: 1 references (TestCyberTruck.re:37:8)
  TestCyberTruck.alwaysProgress: 1 references (TestCyberTruck.re:30:8)
  TestCyberTruck.alwaysLoop: 1 references (TestCyberTruck.re:27:8)
  TestCyberTruck.Progress.Nested.f: 1 references (TestCyberTruck.re:83:8)
  TestCyberTruck.progress2: 1 references (TestCyberTruck.re:51:8)
  TestCyberTruck.progress: 11 references (TestCyberTruck.re:13:4, TestCyberTruck.re:18:8, TestCyberTruck.re:30:8, TestCyberTruck.re:37:8, TestCyberTruck.re:51:8, TestCyberTruck.re:62:8, TestCyberTruck.re:71:8, TestCyberTruck.re:95:8, TestCyberTruck.re:102:8, TestCyberTruck.re:109:8, TestCyberTruck.re:117:8)
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:24: justReturn
<-- line 24
[@dead "justReturn"] let rec justReturn = () => ();
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:140: Parser.tokenToString
<-- line 140
[@dead "Parser.tokenToString"]   let tokenToString = token =>
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:154: Parser.expect
<-- line 154
[@dead "Parser.expect"]   let expect = (p, token) =>
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:163: parseListListInt
<-- line 163
[@dead "parseListListInt"] let rec parseListListInt = p => parseList(p, ~f=parseListInt)

UNUSED CONSTRUCTORS/RECORD FIELDS:
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:130: Parser.position.lnum
<-- line 130
    [@dead "Parser.position.lnum"] lnum: int,
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:131: Parser.position.cnum
<-- line 131
    [@dead "Parser.position.cnum"] cnum: int,
/Users/cristianoc/reasonml/genType/examples/arnold/src/TestCyberTruck.re:135: Parser.t.position
<-- line 135
    [@dead "Parser.t.position"] mutable position,
