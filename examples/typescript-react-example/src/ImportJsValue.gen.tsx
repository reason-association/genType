/* TypeScript file generated by genType. */

// tslint:disable-next-line:no-var-requires
const ImportJsValueBS = require('./ImportJsValue.bs');

import {AbsoluteValue as AbsoluteValue_t} from './MyMath';

import {stringFunction} from './MyMath';

// tslint:disable-next-line:interface-over-type-literal
export type point = { readonly x: number; readonly y?: number };

// tslint:disable-next-line:interface-over-type-literal
export type AbsoluteValue_t = AbsoluteValue_t;

// tslint:disable-next-line:interface-over-type-literal
export type stringFunction = stringFunction;

// tslint:disable-next-line:interface-over-type-literal
export type color = "tomato" | "gray";

export const roundedNumber: number = ImportJsValueBS.roundedNumber;

export const areaValue: number = ImportJsValueBS.areaValue;

export const useGetProp: (_1:AbsoluteValue_t) => number = ImportJsValueBS.useGetProp;

export const useGetAbs: (_1:AbsoluteValue_t) => number = ImportJsValueBS.useGetAbs;

export const returnedFromHigherOrder: number = ImportJsValueBS.returnedFromHigherOrder;
