// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as ImportJsValueGen from "./ImportJsValue.gen";

function round(prim) {
  return ImportJsValueGen.round(prim);
}

function area(prim) {
  return ImportJsValueGen.area(prim);
}

var roundedNumber = ImportJsValueGen.round(1.8);

var areaValue = ImportJsValueGen.area(/* record */[
      /* x */3,
      /* y */undefined
    ]);

function getAbs(x) {
  return x.getAbs();
}

var AbsoluteValue = {
  getAbs: getAbs
};

function useGetProp(x) {
  return x.getProp() + 1 | 0;
}

function useGetAbs(x) {
  return x.getAbs() + 1 | 0;
}

function useColor(prim) {
  return ImportJsValueGen.useColor(prim);
}

function higherOrder(prim) {
  return ImportJsValueGen.higherOrder(prim);
}

var returnedFromHigherOrder = ImportJsValueGen.higherOrder((function (prim, prim$1) {
        return prim + prim$1 | 0;
      }));

function convertVariant(prim) {
  return ImportJsValueGen.convertVariant(prim);
}

function polymorphic(prim) {
  return ImportJsValueGen.polymorphic(prim);
}

var $$default = ImportJsValueGen.default;

export {
  round ,
  area ,
  roundedNumber ,
  areaValue ,
  AbsoluteValue ,
  useGetProp ,
  useGetAbs ,
  useColor ,
  higherOrder ,
  returnedFromHigherOrder ,
  convertVariant ,
  polymorphic ,
  $$default ,
  $$default as default,
  
}
/* roundedNumber Not a pure module */
