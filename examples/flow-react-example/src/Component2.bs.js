// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReact from "reason-react/src/ReasonReact.js";

var component = ReasonReact.reducerComponent("Example");

function make(greeting, _children) {
  return {
          debugName: component.debugName,
          reactClassInternal: component.reactClassInternal,
          handedOffState: component.handedOffState,
          willReceiveProps: component.willReceiveProps,
          didMount: component.didMount,
          didUpdate: component.didUpdate,
          willUnmount: component.willUnmount,
          willUpdate: component.willUpdate,
          shouldUpdate: component.shouldUpdate,
          render: (function (self) {
              var message = "You've clicked this " + (String(self.state.count) + " times(s)");
              return React.createElement("div", undefined, React.createElement("button", {
                              onClick: (function (_event) {
                                  return Curry._1(self.send, /* Click */0);
                                })
                            }, message), React.createElement("button", {
                              onClick: (function (_event) {
                                  return Curry._1(self.send, /* Toggle */1);
                                })
                            }, "Toggle greeting"), self.state.show ? greeting : null);
            }),
          initialState: (function (param) {
              return {
                      count: 0,
                      show: true,
                      someRef: {
                        contents: 0
                      }
                    };
            }),
          retainedProps: component.retainedProps,
          reducer: (function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [{
                            count: state.count,
                            show: !state.show,
                            someRef: state.someRef
                          }]);
              } else {
                return /* Update */Block.__(0, [{
                            count: state.count + 1 | 0,
                            show: state.show,
                            someRef: state.someRef
                          }]);
              }
            }),
          jsElementWrapped: component.jsElementWrapped
        };
}

function getBlock(x) {
  return 34;
}

export {
  component ,
  make ,
  getBlock ,
  
}
/* component Not a pure module */
